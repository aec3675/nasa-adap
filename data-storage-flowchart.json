[{"state":{"code":"flowchart TD\n    A[Data] --> B[FBOT]\n    A-->C[SESNe]\n    A-->D[SLSN-1]\n    A-->E[SLSN-2]\n    A-->F[SNII]\n    A-->G[SNIIn]\n    A-->a[Other]\n    B-->H[SNIbn]\n    B-->I[SNIcn]\n    C-->J[SNIIb]\n    D-->K[SLSN-1]\n    E-->L[SLSN-2]\n    F-->M[SNIIP]\n    F-->N[SNII-pec]\n    F-->O[SNII]\n    G-->P[SNIIn]\n","mermaid":"{\n  \"theme\": \"default\"\n}","autoSync":true,"updateDiagram":false},"time":1714499632871,"type":"auto","id":"15aad350-901a-49ce-b0b0-ea3dbe2439ed","name":"mammoth-toddler"},{"state":{"code":"flowchart TD\n    A[Data] --> B[FBOT]\n    A-->C[SESNe]\n    A-->D[SLSN-1]\n    A-->E[SLSN-2]\n    A-->F[SNII]\n    A-->G[SNIIn]\n    A-->a[Other]\n    B-->H[SNIbn]\n    B-->I[SNIcn]\n    C-->J[SNIIb]\n    D-->K[SLSN-1]\n    E-->L[SLSN-2]\n    \n","mermaid":"{\n  \"theme\": \"default\"\n}","autoSync":true,"updateDiagram":false},"time":1714499572869,"type":"auto","id":"e14bab9c-2d12-4f5b-854b-d0d76013dced","name":"hot-adult"},{"state":{"code":"flowchart TD\n    A[Data] --> B[FBOT]\n    A-->C[SESNe]\n    A-->D[SLSN-1]\n    A-->E[SLSN-2]\n    A-->F[SNII]\n    A-->G[SNIIn]\n    B-->H[SNIbn]\n    B-->I[SNIcn]\n    \n","mermaid":"{\n  \"theme\": \"default\"\n}","autoSync":true,"updateDiagram":false},"time":1714499512869,"type":"auto","id":"7d584e68-41d4-4aa5-a610-708462b0eb6c","name":"best-father"},{"state":{"code":"flowchart TD\n    A[Data] --> B[FBOT]\n    A-->C[SESNe]\n    A-->D[SLSN-1]\n    A-->E[SLSN-2]\n    ","mermaid":"{\n  \"theme\": \"default\"\n}","autoSync":true,"updateDiagram":false},"time":1714499452869,"type":"auto","id":"b4dfc771-bfe8-4085-86fc-5d527ad90563","name":"sparse-florist"},{"state":{"code":"flowchart TD\n    A[Data]\n    ","mermaid":"{\n  \"theme\": \"default\"\n}","autoSync":true,"updateDiagram":false},"time":1714499392868,"type":"auto","id":"40886a4d-41d8-454f-a3a4-13e7e44117dd","name":"harsh-market"},{"state":{"code":"flowchart TD\n    A(Extragalactic?) -->|Yes| B(Moving Solar System Object?)\n    A --> C(Skip)\n    B --> C\n    B --> |No| D(At least 30 mins b/w 1st and last detection?)\n    D --> |Yes| E(Coincident with known stellar object?)\n    D --> C\n    E --> |No| F(...)\n    E --> C\n    F(Split alert data into g and r band)\n    F --> G(At least 2 detections in each band?)\n    G --> |Yes| H(1. Define features ranges based on best-fit MCMC parameters\n                2. Assign each observation a gradient with np.gradient\n                3. Assign each observation one of the following regimes: start, rise, peak, fall, trough, or end)\n    G --> C\n    H --> I(Trough in the first 18 days?)\n    I --> |Yes| K(Peak before the trough?)\n    K --> |Yes| L(Alert has LC shape: m1+m2+m3)\n    K --> |No| M(Alert has LC shape: m2+m3)\n    L --> N(1. Segment alert into rises and falls, depending on LC shape\n            2. Fit each segment to 1D line with scipy.linregress)\n    M --> N\n    N --> O(Compare fitted slopes to features slopes\n            If fitted falls withtin feature allowance, tally feature)\n    I --> |No| P(Is there a peak?)\n    P --> |Yes| Q(1. Only take observations t<18 days from peak\n                2. Assign last observation as trough\n                LC has shape: m1+m2)\n    P --> |No| R(Only falling?)\n    R --> |Yes| S(LC has shape: m2)\n    R --> |No| T(LC has shape: m1 OR m3)\n    S --> N\n    T --> N\n    Q --> N\n    O --> U(1. Calculate time/mag/filter offset features\n            2. Compare to MCMC best-fit features\n            3. If offset feature fall within MCMC feature bounds, tally feature)\n    U --> V(Add up number of features present)\n    V --> |f<10| C(Skip)\n    V --> |14<=f| W(Highly probable target object)\n    V --> |12<=f<14| X(Mostly probable target object)\n    V --> |10<=f<12| Y(Somewhat probably target object)\n    W --> AA(External Ping!)\n    X --> AA\n    Y --> AA","mermaid":"{\n  \"theme\": \"default\"\n}","autoSync":true,"updateDiagram":false},"time":1714429647622,"type":"auto","id":"fdce33a6-bd00-4ada-b495-5527b7de0640","name":"orange-helicopter"},{"state":{"code":"flowchart TD\n    A(Extragalactic?) -->|Yes| B(Moving Solar System Object?)\n    A --> C(Skip)\n    B --> C\n    B --> |No| D(At least 30 mins b/w 1st and last detection?)\n    D --> |Yes| E(Coincident with known stellar object?)\n    D --> C\n    E --> |No| F(...)\n    E --> C\n    F(Split alert data into g and r band)\n    F --> G(At least 2 detections in each band?)\n    G --> |Yes| H(1. Define features ranges based on best-fit MCMC parameters\n                2. Assign each observation a gradient with np.gradient\n                3. Assign each observation one of the following regimes: start, rise, peak, fall, trough, or end)\n    G --> C\n    H --> I(Trough in the first 18 days?)\n    I --> |Yes| K(Peak before the trough?)\n    K --> |Yes| L(Alert has LC shape: m1+m2+m3)\n    K --> |No| M(Alert has LC shape: m2+m3)\n    L --> N(1. Segment alert into rises and falls, depending on LC shape\n            2. Fit each segment to 1D line with scipy.linregress)\n    M --> N\n    N --> O(Compare fitted slopes to features slopes\n            If fitted falls withtin feature allowance, tally feature)\n    I --> |No| P(Is there a peak?)\n    P --> |Yes| Q(1. Only take observations t<18 days from peak\n                2. Assign last observation as trough\n                LC has shape: m1+m2)\n    P --> |No| R(Only falling?)\n    R --> |Yes| S(LC has shape: m2)\n    R --> |No| T(LC has shape: m1 OR m3)\n    S --> N\n    T --> N\n    Q --> N\n    O --> U(1. Calculate time/mag/filter offset features\n            2. Compare to MCMC best-fit features\n            3. If offset feature fall within MCMC feature bounds, tally feature)\n    U --> V(Add up number of features present)\n    V --> |14<=f| W(Highly probable target object)\n    V --> |12<=f<14| X(Mostly probably target object)\n    V --> |10<=f<12| Y(Somewhat probably rta)\n    V --> |f<10| Z(Skip)\n    W --> AA(External Ping!)\n    X --> AA\n    Y --> AA","mermaid":"{\n  \"theme\": \"default\"\n}","autoSync":true,"updateDiagram":false},"time":1714429587626,"type":"auto","id":"ffe89533-0c91-40f2-b36f-2957034b092b","name":"boring-island"},{"state":{"code":"flowchart TD\n    A(Extragalactic?) -->|Yes| B(Moving Solar System Object?)\n    A --> C(Skip)\n    B --> C\n    B --> |No| D(At least 30 mins b/w 1st and last detection?)\n    D --> |Yes| E(Coincident with known stellar object?)\n    D --> C\n    E --> |No| F(...)\n    E --> C\n    F(Split alert data into g and r band)\n    F --> G(At least 2 detections in each band?)\n    G --> |Yes| H(1. Define features ranges based on best-fit MCMC parameters\n                2. Assign each observation a gradient with np.gradient\n                3. Assign each observation one of the following regimes: start, rise, peak, fall, trough, or end)\n    G --> C\n    H --> I(Trough in the first 18 days?)\n    I --> |Yes| K(Peak before the trough?)\n    K --> |Yes| L(Alert has LC shape: m1+m2+m3)\n    K --> |No| M(Alert has LC shape: m2+m3)\n    L --> N(1. Segment alert into rises and falls, depending on LC shape\n            2. Fit each segment to 1D line with scipy.linregress)\n    M --> N\n    N --> O(Compare fitted slopes to features slopes\n            If fitted falls withtin feature allowance, tally feature)\n    I --> |No| P(Is there a peak?)\n    P --> |Yes| Q(1. Only take observations t<18 days from peak\n                2. Assign last observation as trough\n                LC has shape: m1+m2)\n    P --> |No| R(Only falling?)\n    R --> |Yes| S(LC has shape: m2)\n    R --> |No| T(LC has shape: m1 OR m3)\n    S --> N\n    T --> N\n    Q --> N\n    O --> U(1. Calculate time/mag/filter offset features\n            2. Compare to MCMC best-fit features\n            3. If offset feature fall within MCMC feature bounds, tally feature)\n    U --> V(Add up number of features present)\n    V --> |14<=f| W\n    V --> |12<=f<14| X\n    V --> |10<=f<12| Y\n    V --> |f<10| Z\n    W --> AA","mermaid":"{\n  \"theme\": \"default\"\n}","autoSync":true,"updateDiagram":false},"time":1714429527626,"type":"auto","id":"c133940b-db95-44c0-81d9-065457e0c0f8","name":"microscopic-action"},{"state":{"code":"flowchart TD\n    A(Extragalactic?) -->|Yes| B(Moving Solar System Object?)\n    A --> C(Skip)\n    B --> C\n    B --> |No| D(At least 30 mins b/w 1st and last detection?)\n    D --> |Yes| E(Coincident with known stellar object?)\n    D --> C\n    E --> |No| F(...)\n    E --> C\n    F(Split alert data into g and r band)\n    F --> G(At least 2 detections in each band?)\n    G --> |Yes| H(1. Define features ranges based on best-fit MCMC parameters\n                2. Assign each observation a gradient with np.gradient\n                3. Assign each observation one of the following regimes: start, rise, peak, fall, trough, or end)\n    G --> C\n    H --> I(Trough in the first 18 days?)\n    I --> |Yes| K(Peak before the trough?)\n    K --> |Yes| L(Alert has LC shape: m1+m2+m3)\n    K --> |No| M(Alert has LC shape: m2+m3)\n    L --> N(1. Segment alert into rises and falls, depending on LC shape\n            2. Fit each segment to 1D line with scipy.linregress)\n    M --> N\n    N --> O(Compare fitted slopes to features slopes\n            If fitted falls withtin feature allowance, tally feature)\n    I --> |No| P(Is there a peak?)\n    P --> |Yes| Q(1. Only take observations t<18 days from peak\n                2. Assign last observation as trough\n                LC has shape: m1+m2)\n    P --> |No| R(Only falling?)\n    R --> |Yes| S(LC has shape: m2)\n    R --> |No| T(LC has shape: m1 OR m3)\n    S --> N\n    T --> N\n    Q --> N\n    O --> U(1. Calculate time/mag/filter offset features\n            2. Compare to MCMC best-fit features\n            3. If offset feature fall within MCMC feature bounds, tally feature)\n    U --> V(Add up number of features present)\n    V --> |f>14| W\n    V --> |11<f<14| X\n    V --> |9<f<12\n","mermaid":"{\n  \"theme\": \"default\"\n}","autoSync":true,"updateDiagram":false},"time":1714429467624,"type":"auto","id":"f1fe0c55-eeb8-4f16-92c8-de564e6b673e","name":"jealous-wall"},{"state":{"code":"flowchart TD\n    A(Extragalactic?) -->|Yes| B(Moving Solar System Object?)\n    A --> C(Skip)\n    B --> C\n    B --> |No| D(At least 30 mins b/w 1st and last detection?)\n    D --> |Yes| E(Coincident with known stellar object?)\n    D --> C\n    E --> |No| F(...)\n    E --> C\n    F(Split alert data into g and r band)\n    F --> G(At least 2 detections in each band?)\n    G --> |Yes| H(1. Define features ranges based on best-fit MCMC parameters\n                2. Assign each observation a gradient with np.gradient\n                3. Assign each observation one of the following regimes: start, rise, peak, fall, trough, or end)\n    G --> C\n    H --> I(Trough in the first 18 days?)\n    I --> |Yes| K(Peak before the trough?)\n    K --> |Yes| L(Alert has LC shape: m1+m2+m3)\n    K --> |No| M(Alert has LC shape: m2+m3)\n    L --> N(1. Segment alert into rises and falls, depending on LC shape\n            2. Fit each segment to 1D line with scipy.linregress)\n    M --> N\n    N --> O(Compare fitted slopes to features slopes\n            If fitted falls withtin feature allowance, tally feature)\n    I --> |No| P(Is there a peak?)\n    P --> |Yes| Q(1. Only take observations t<18 days from peak\n                2. Assign last observation as trough\n                LC has shape: m1+m2)\n    P --> |No| R(Only falling?)\n    R --> |Yes| S(LC has shape: m2)\n    R --> |No| T(LC has shape: m1 OR m3)\n    S --> N\n    T --> N\n    Q --> N\n    O --> U(1. Calculate time/mag/filter offset features\n            2. Compare to MCMC best-fit features\n            3. If offset feature fall within MCMC feature bounds, tally feature)\n    U --> V(Add up number of features present)\n    V --> |f>14| \n","mermaid":"{\n  \"theme\": \"default\"\n}","autoSync":true,"updateDiagram":false},"time":1714429407623,"type":"auto","id":"aa350747-1d52-492d-aabb-039c264e98e1","name":"scruffy-france"},{"state":{"code":"flowchart TD\n    A(Extragalactic?) -->|Yes| B(Moving Solar System Object?)\n    A --> C(Skip)\n    B --> C\n    B --> |No| D(At least 30 mins b/w 1st and last detection?)\n    D --> |Yes| E(Coincident with known stellar object?)\n    D --> C\n    E --> |No| F(...)\n    E --> C\n    F(Split alert data into g and r band)\n    F --> G(At least 2 detections in each band?)\n    G --> |Yes| H(1. Define features ranges based on best-fit MCMC parameters\n                2. Assign each observation a gradient with np.gradient\n                3. Assign each observation one of the following regimes: start, rise, peak, fall, trough, or end)\n    G --> C\n    H --> I(Trough in the first 18 days?)\n    I --> |Yes| K(Peak before the trough?)\n    K --> |Yes| L(Alert has LC shape: m1+m2+m3)\n    K --> |No| M(Alert has LC shape: m2+m3)\n    L --> N(1. Segment alert into rises and falls, depending on LC shape\n            2. Fit each segment to 1D line with scipy.linregress)\n    M --> N\n    N --> O(Compare fitted slopes to features slopes\n            If fitted falls withtin feature allowance, tally feature)\n    I --> |No| P(Is there a peak?)\n    P --> |Yes| Q(1. Only take observations t<18 days from peak\n                2. Assign last observation as trough\n                LC has shape: m1+m2)\n    P --> |No| R(Only falling?)\n    R --> |Yes| S(LC has shape: m2)\n    R --> |No| T(LC has shape: m1 OR m3)\n    S --> N\n    T --> N\n    Q --> N\n    O --> U(1. Calculate time/mag/filter offset features\n            2. Compare to MCMC best-fit features\n            3. If offset features)\n","mermaid":"{\n  \"theme\": \"default\"\n}","autoSync":true,"updateDiagram":false},"time":1714429347621,"type":"auto","id":"e6a5720c-ee30-4bc0-a336-7248a4f860e2","name":"lemon-evening"},{"state":{"code":"flowchart TD\n    A(Extragalactic?) -->|Yes| B(Moving Solar System Object?)\n    A --> C(Skip)\n    B --> C\n    B --> |No| D(At least 30 mins b/w 1st and last detection?)\n    D --> |Yes| E(Coincident with known stellar object?)\n    D --> C\n    E --> |No| F(...)\n    E --> C\n    F(Split alert data into g and r band)\n    F --> G(At least 2 detections in each band?)\n    G --> |Yes| H(1. Define features ranges based on best-fit MCMC parameters\n                2. Assign each observation a gradient with np.gradient\n                3. Assign each observation one of the following regimes: start, rise, peak, fall, trough, or end)\n    G --> C\n    H --> I(Trough in the first 18 days?)\n    I --> |Yes| K(Peak before the trough?)\n    K --> |Yes| L(Alert has LC shape: m1+m2+m3)\n    K --> |No| M(Alert has LC shape: m2+m3)\n    L --> N(1. Segment alert into rises and falls, depending on LC shape\n            2. Fit each segment to 1D line with scipy.linregress)\n    M --> N\n    N --> O(Compare fitted slopes to features slopes\n            If fitted falls withtin feature allowance, tally feature)\n    I --> |No| P(Is there a peak?)\n    P --> |Yes| Q(1. Only take observations t<18 days from peak\n                2. Assign last observation as trough\n                LC has shape: m1+m2)\n    P --> |No| R(Only falling?)\n    R --> |Yes| S(LC has shape: m2)\n    R --> |No| T(LC has shape: m1 OR m3)\n    S --> N\n    T --> N\n    Q --> N\n    O --> \n","mermaid":"{\n  \"theme\": \"default\"\n}","autoSync":true,"updateDiagram":false},"time":1714429287620,"type":"auto","id":"d33ec17b-f8d3-411f-833f-23f9b0fc9049","name":"witty-dress"},{"state":{"code":"flowchart TD\n    A(Extragalactic?) -->|Yes| B(Moving Solar System Object?)\n    A --> C(Skip)\n    B --> C\n    B --> |No| D(At least 30 mins b/w 1st and last detection?)\n    D --> |Yes| E(Coincident with known stellar object?)\n    D --> C\n    E --> |No| F(...)\n    E --> C\n    F(Split alert data into g and r band)\n    F --> G(At least 2 detections in each band?)\n    G --> |Yes| H(1. Define features ranges based on best-fit MCMC parameters\n                2. Assign each observation a gradient with np.gradient\n                3. Assign each observation one of the following regimes: start, rise, peak, fall, trough, or end)\n    G --> C\n    H --> I(Trough in the first 18 days?)\n    I --> |Yes| K(Peak before the trough?)\n    K --> |Yes| L(Alert has LC shape: m1+m2+m3)\n    K --> |No| M(Alert has LC shape: m2+m3)\n    L --> N(1. Segment alert into rises and falls, depending on LC shape\n            2. Fit each segment to 1D line with scipy.linregress)\n    M --> N\n    N --> O(Compare fitted slopes to features slopes\n            If fitted falls withtin feature allowance, tally feature)\n    I --> |No| P(Is there a peak?)\n    P --> |Yes| Q(LC has shape: m1+m2\n        1. Only take observations t<18 days from peak\n                2. Assign last observation as trough\n                )\n    P --> |No| R(Only falling?)\n    R --> |Yes| S(LC has shape: m2)\n    R --> |No| T(LC has shape: m1 OR m3)\n    S --> N\n    T --> N\n    Q --> N\n","mermaid":"{\n  \"theme\": \"default\"\n}","autoSync":true,"updateDiagram":false},"time":1714429227619,"type":"auto","id":"55622594-7b6c-4ca3-b60b-3f693279a4fc","name":"bland-morn"},{"state":{"code":"flowchart TD\n    A(Extragalactic?) -->|Yes| B(Moving Solar System Object?)\n    A --> C(Skip)\n    B --> C\n    B --> |No| D(At least 30 mins b/w 1st and last detection?)\n    D --> |Yes| E(Coincident with known stellar object?)\n    D --> C\n    E --> |No| F(...)\n    E --> C\n    F(Split alert data into g and r band)\n    F --> G(At least 2 detections in each band?)\n    G --> |Yes| H(1. Define features ranges based on best-fit MCMC parameters\n                2. Assign each observation a gradient with np.gradient\n                3. Assign each observation one of the following regimes: start, rise, peak, fall, trough, or end)\n    G --> C\n    H --> I(Trough in the first 18 days?)\n    I --> |Yes| K(Peak before the trough?)\n    K --> |Yes| L(Alert has LC shape: m1+m2+m3)\n    K --> |No| M(Alert has LC shape: m2+m3)\n    L --> N(1. Segment alert into rises and falls, depending on LC shape\n            2. Fit each segment to 1D line with scipy.linregress)\n    M --> N\n    N --> O(Compare fitted slopes to features slopes\n            If fitted falls withtin feature allowance, tally feature)\n    I --> |No| P(Is there a peak?)\n    P --> |Yes| Q(Only take observations t<18 days from peak\n                Assign last observation as trough)\n    P --> |No| R(Only falling?)\n    R --> |Yes| S(LC has shape: m2)\n    R --> |No| T(LC has shape: m1 OR m3)\n    S --> N\n    T --> N","mermaid":"{\n  \"theme\": \"default\"\n}","autoSync":true,"updateDiagram":false},"time":1714429167618,"type":"auto","id":"f44ba575-0370-473d-a457-dd2aa40f2e0d","name":"polite-evening"},{"state":{"code":"flowchart TD\n    A(Extragalactic?) -->|Yes| B(Moving Solar System Object?)\n    A --> C(Skip)\n    B --> C\n    B --> |No| D(At least 30 mins b/w 1st and last detection?)\n    D --> |Yes| E(Coincident with known stellar object?)\n    D --> C\n    E --> |No| F(...)\n    E --> C\n    F(Split alert data into g and r band)\n    F --> G(At least 2 detections in each band?)\n    G --> |Yes| H(1. Define features ranges based on best-fit MCMC parameters\n                2. Assign each observation a gradient with np.gradient\n                3. Assign each observation one of the following regimes: start, rise, peak, fall, trough, or end)\n    G --> C\n    H --> I(Trough in the first 18 days?)\n    I --> |Yes| K(Peak before the trough?)\n    K --> |Yes| L(Alert has LC shape: m1+m2+m3)\n    K --> |No| M(Alert has LC shape: m2+m3)\n    L --> N(1. Segment alert into rises and falls, depending on LC shape\n            2. Fit each segment to 1D line with scipy.linregress)\n    M --> N\n    N --> O(Compare fitted slopes to features slopes\n            If fitted falls withtin feature allowance, tally feature)\n    I --> |No| P(Is there a peak?)\n    P --> |Yes| Q(Only take observations t<18 days from peak\n                Assign last observation as trough)\n    P --> |No| R(Only falling?)\n    R --> |Yes| S(LC Has shape: m2)\n    R --> |","mermaid":"{\n  \"theme\": \"default\"\n}","autoSync":true,"updateDiagram":false},"time":1714429107617,"type":"auto","id":"d7fd6cf1-db6d-427b-b5f1-531d8aa6f96e","name":"squeaking-agency"},{"state":{"code":"flowchart TD\n    A(Extragalactic?) -->|Yes| B(Moving Solar System Object?)\n    A --> C(Skip)\n    B --> C\n    B --> |No| D(At least 30 mins b/w 1st and last detection?)\n    D --> |Yes| E(Coincident with known stellar object?)\n    D --> C\n    E --> |No| F(...)\n    E --> C\n    F(Split alert data into g and r band)\n    F --> G(At least 2 detections in each band?)\n    G --> |Yes| H(1. Define features ranges based on best-fit MCMC parameters\n                2. Assign each observation a gradient with np.gradient\n                3. Assign each observation one of the following regimes: start, rise, peak, fall, trough, or end)\n    G --> C\n    H --> I(Trough in the first 18 days?)\n    I --> |Yes| K(Peak before the trough?)\n    K --> |Yes| L(Alert has LC shape: m1+m2+m3)\n    K --> |No| M(Alert has LC shape: m2+m3)\n    L --> N(1. Segment alert into rises and falls, depending on LC shape\n            2. Fit each segment to 1D line with scipy.linregress)\n    M --> N\n    N --> O(Compare fitted slopes to features slopes\n            If fitted falls withtin feature allowance, tally feature)\n    I --> |No| P(Is there a peak?)\n    P --> |Yes| Q(Only take observations t<18 days from peak\n                Assign last observation as trough)\n    P --> |No| R(Only falling?)\n    R --> |Yes| S(LC Has shape: m2)\n    P --> ","mermaid":"{\n  \"theme\": \"default\"\n}","autoSync":true,"updateDiagram":false},"time":1714429047616,"type":"auto","id":"3c8e585a-17e1-4e14-bc57-6418bf86f113","name":"glamorous-postman"},{"state":{"code":"flowchart TD\n    A(Extragalactic?) -->|Yes| B(Moving Solar System Object?)\n    A --> C(Skip)\n    B --> C\n    B --> |No| D(At least 30 mins b/w 1st and last detection?)\n    D --> |Yes| E(Coincident with known stellar object?)\n    D --> C\n    E --> |No| F(...)\n    E --> C\n    F(Split alert data into g and r band)\n    F --> G(At least 2 detections in each band?)\n    G --> |Yes| H(1. Define features ranges based on best-fit MCMC parameters\n                2. Assign each observation a gradient with np.gradient\n                3. Assign each observation one of the following regimes: start, rise, peak, fall, trough, or end)\n    G --> C\n    H --> I(Trough in the first 18 days?)\n    I --> |Yes| K(Peak before the trough?)\n    K --> |Yes| L(Alert has LC shape: m1+m2+m3)\n    K --> |No| M(Alert has LC shape: m2+m3)\n    L --> N(1. Segment alert into rises and falls, depending on LC shape\n            2. Fit each segment to 1D line with scipy.linregress)\n    M --> N\n    N --> O(Compare fitted slopes to features slopes\n            If fitted falls withtin feature allowance, tally feature)\n    I --> |No| P(Is there a peak?)\n    P --> |Yes| Q(Only take observations t<18 days from peak\n                Assign last observation as trough)\n    P --> |No| R(Only falling?)\n    r --> |","mermaid":"{\n  \"theme\": \"default\"\n}","autoSync":true,"updateDiagram":false},"time":1714428987615,"type":"auto","id":"5f075b3b-a4f8-413a-bc8e-ce637cf33340","name":"lively-library"},{"state":{"code":"flowchart TD\n    A(Extragalactic?) -->|Yes| B(Moving Solar System Object?)\n    A --> C(Skip)\n    B --> C\n    B --> |No| D(At least 30 mins b/w 1st and last detection?)\n    D --> |Yes| E(Coincident with known stellar object?)\n    D --> C\n    E --> |No| F(...)\n    E --> C\n    F(Split alert data into g and r band)\n    F --> G(At least 2 detections in each band?)\n    G --> |Yes| H(1. Define features ranges based on best-fit MCMC parameters\n                2. Assign each observation a gradient with np.gradient\n                3. Assign each observation one of the following regimes: start, rise, peak, fall, trough, or end)\n    G --> C\n    H --> I(Trough in the first 18 days?)\n    I --> |Yes| K(Peak before the trough?)\n    K --> |Yes| L(Alert has LC shape: m1+m2+m3)\n    K --> |No| M(Alert has LC shape: m2+m3)\n    L --> N(1. Segment alert into rises and falls, depending on LC shape\n            2. Fit each segment to 1D line with scipy.linregress)\n    M --> N\n    N --> O(Compare fitted slopes to features slopes\n            If fitted falls withtin feature allowance, tally feature)\n    I --> |No| P(Is there a peak?)\n    P --> |Yes| Q(Only take observations t<18 days from peak\n                Assign last observation as trough)\n    P --> |No| R","mermaid":"{\n  \"theme\": \"default\"\n}","autoSync":true,"updateDiagram":false},"time":1714428927614,"type":"auto","id":"8852d5b8-0306-446a-81f2-83acb2d22d34","name":"strong-child"},{"state":{"code":"flowchart TD\n    A(Extragalactic?) -->|Yes| B(Moving Solar System Object?)\n    A --> C(Skip)\n    B --> C\n    B --> |No| D(At least 30 mins b/w 1st and last detection?)\n    D --> |Yes| E(Coincident with known stellar object?)\n    D --> C\n    E --> |No| F(...)\n    E --> C\n    F(Split alert data into g and r band)\n    F --> G(At least 2 detections in each band?)\n    G --> |Yes| H(1. Define features ranges based on best-fit MCMC parameters\n                2. Assign each observation a gradient with np.gradient\n                3. Assign each observation one of the following regimes: start, rise, peak, fall, trough, or end)\n    G --> C\n    H --> I(Trough in the first 18 days?)\n    I --> |Yes| K(Peak before the trough?)\n    K --> |Yes| L(Alert has LC shape: m1+m2+m3)\n    K --> |No| M(Alert has LC shape: m2+m3)\n    L --> N(1. Segment alert into rises and falls, depending on LC shape\n            2. Fit each segment to 1D line with scipy.linregress)\n    M --> N\n    N --> O(Compare fitted slopes to features slopes\n            If fitted falls withtin feature allowance, tally feature)\n    I --> |No| P(Is there a peak?)\n    P --> |Yes| Q(Assign trough as last observation)","mermaid":"{\n  \"theme\": \"default\"\n}","autoSync":true,"updateDiagram":false},"time":1714428867613,"type":"auto","id":"c1ff5888-82ee-4045-ad21-22cdab9e1870","name":"limited-island"},{"state":{"code":"flowchart TD\n    A(Extragalactic?) -->|Yes| B(Moving Solar System Object?)\n    A --> C(Skip)\n    B --> C\n    B --> |No| D(At least 30 mins b/w 1st and last detection?)\n    D --> |Yes| E(Coincident with known stellar object?)\n    D --> C\n    E --> |No| F(...)\n    E --> C\n    F(Split alert data into g and r band)\n    F --> G(At least 2 detections in each band?)\n    G --> |Yes| H(1. Define features ranges based on best-fit MCMC parameters\n                2. Assign each observation a gradient with np.gradient\n                3. Assign each observation one of the following regimes: start, rise, peak, fall, trough, or end)\n    G --> C\n    H --> I(Trough in the first 18 days?)\n    I --> |Yes| K(Peak before the trough?)\n    K --> |Yes| L(Alert has LC shape: m1+m2+m3)\n    K --> |No| M(Alert has LC shape: m2+m3)\n    L --> N(1. Segment alert into rises and falls, depending on LC shape\n            2. Fit each segment to 1D line with scipy.linregress)\n    M --> N\n    N --> O(Compare fitted slopes to features slopes\n            If fitted falls withtin feature allowance, tally feature)\n    I --> |No| P(Is there a peak?)","mermaid":"{\n  \"theme\": \"default\"\n}","autoSync":true,"updateDiagram":false},"time":1714428807475,"type":"auto","id":"feee00cf-0d3b-48a3-bf85-14238d490344","name":"stale-spoon"},{"state":{"code":"flowchart TD\n    A(Extragalactic?) -->|Yes| B(Moving Solar System Object?)\n    A --> C(Skip)\n    B --> C\n    B --> |No| D(At least 30 mins b/w 1st and last detection?)\n    D --> |Yes| E(Coincident with known stellar object?)\n    D --> C\n    E --> |No| F(...)\n    E --> C\n    F(Split alert data into g and r band)\n    F --> G(At least 2 detections in each band?)\n    G --> |Yes| H(1. Define features ranges based on best-fit MCMC parameters\n                2. Assign each observation a gradient with np.gradient\n                3. Assign each observation one of the following regimes: start, rise, peak, fall, trough, or end)\n    G --> C\n    H --> I(Trough in the first 18 days?)\n    I --> |Yes| K(Peak before the trough?)\n    K --> |Yes| L(Alert has LC shape: m1+m2+m3)\n    K --> |No| M(Alert has LC shape: m2+m3)\n    L --> N(1. Segment alert into rises and falls, depending on LC shape\n            2. Fit each segment to 1D line with scipy.linregress)\n    M --> N\n    N --> O(Compare fitted slopes to features slopes\n            If fitted falls withtin feature allowance, tally feature)\n    I --> |No| Z(...)","mermaid":"{\n  \"theme\": \"default\"\n}","autoSync":true,"updateDiagram":false},"time":1714428747474,"type":"auto","id":"6d9971ea-7e22-4474-a0df-ca3bcc1ec1e9","name":"bumpy-processor"},{"state":{"code":"flowchart TD\n    A(Extragalactic?) -->|Yes| B(Moving Solar System Object?)\n    A --> C(Skip)\n    B --> C\n    B --> |No| D(At least 30 mins b/w 1st and last detection?)\n    D --> |Yes| E(Coincident with known stellar object?)\n    D --> C\n    E --> |No| F(...)\n    E --> C\n    F(Split alert data into g and r band)\n    F --> G(At least 2 detections in each band?)\n    G --> |Yes| H(1. Define features ranges based on best-fit MCMC parameters\n                2. Assign each observation a gradient with np.gradient\n                3. Assign each observation one of the following regimes: start, rise, peak, fall, trough, or end)\n    G --> C\n    H --> I(Trough in the first 18 days?)\n    I --> |Yes| K(Peak before the trough?)\n    K --> |Yes| L(Alert has LC shape: m1+m2+m3)\n    K --> |No| M(Alert has LC shape: m2+m3)\n    L --> N(1. Segment alert into rises and falls, depending on LC shape\n            2. Fit each segment to 1D line with scipy.linregress)\n    M --> N\n    N --> O(...)\n    I --> |No| Z(...)","mermaid":"{\n  \"theme\": \"default\"\n}","autoSync":true,"updateDiagram":false},"time":1714428687473,"type":"auto","id":"9c2ff37d-bc29-4aa4-96e7-5b37f1207372","name":"rancid-grandmother"},{"state":{"code":"flowchart TD\n    A[Extragalactic?] -->|Yes| B(Moving Solar System Object?)\n    A --> C(Skip)\n    B --> C\n    B --> |No| D(At least 30 mins b/w 1st and last detection?)\n    D --> |Yes| E(Coincident with known stellar object?)\n    D --> C\n    E --> |No| F(...)\n    E --> C\n    F(Split alert data into g and r band)\n    F --> G(At least 2 detections in each band?)\n    G --> |Yes| H(1. Define features ranges based on best-fit MCMC parameters\n                2. Assign each observation a gradient with np.gradient\n                3. Assign each observation one of the following regimes: start, rise, peak, fall, trough, or end)\n    G --> C\n    H --> I(Is there a trough in the first 18 days?)\n    I --> |Yes| K(Is there a peak before the trough?)\n    K --> |Yes| L(Alert has LC shape: m1+m2+m3)\n    K --> |No| M(Alert has LC shape: m2+m3)\n    L --> N(1. Segment alert into rises and falls, depending on LC shape\n            2. Fit each segment to 1D line with scipy.linregress)\n    M --> N\n    I --> |No| Z(...)","mermaid":"{\n  \"theme\": \"default\"\n}","autoSync":true,"updateDiagram":false},"time":1714428627471,"type":"auto","id":"186918d2-3a1d-4624-a7b5-5ac2fb47297b","name":"howling-lighter"},{"state":{"code":"flowchart TD\n    A[Extragalactic?] -->|Yes| B(Moving Solar System Object?)\n    A --> C(Skip)\n    B --> C\n    B --> |No| D(At least 30 mins b/w 1st and last detection?)\n    D --> |Yes| E(Coincident with known stellar object?)\n    D --> C\n    E --> |No| F(...)\n    E --> C\n    F(Split alert data into g and r band)\n    F --> G(At least 2 detections in each band?)\n    G --> |Yes| H(1. Define features ranges based on best-fit MCMC parameters\n                2. Assign each observation a gradient with np.gradient\n                3. Assign each observation one of the following regimes: start, rise, peak, fall, trough, or end)\n    G --> C\n    H --> I(Is there a trough in the first 18 days?)\n    I --> |Yes| K(Is there a peak before the trough?)\n    K --> |Yes| L(Alert has LC shape: m1+m2+m3)\n    K --> |No| M(Alert has LC shape: m2+m3)\n    L --> N(1. Segment alert into rises and falls \n                2. Fit each segment to 1D line with scipy.linregress)\n    M --> N\n    I --> |No| Z(...)","mermaid":"{\n  \"theme\": \"default\"\n}","autoSync":true,"updateDiagram":false},"time":1714428567470,"type":"auto","id":"264a0080-1b29-4e9a-b945-37c4c9b93b73","name":"uptight-dream"},{"state":{"code":"flowchart TD\n    A[Extragalactic?] -->|Yes| B(Moving Solar System Object?)\n    A --> C(Skip)\n    B --> C\n    B --> |No| D(At least 30 mins b/w 1st and last detection?)\n    D --> |Yes| E(Coincident with known stellar object?)\n    D --> C\n    E --> |No| F(...)\n    E --> C\n    F(Split alert data into g and r band)\n    F --> G(At least 2 detections in each band?)\n    G --> |Yes| H(1. Define features ranges based on best-fit MCMC parameters\n                2. Assign each observation a gradient with np.gradient\n                3. Assign each observation one of the following regimes: start, rise, peak, fall, trough, or end)\n    G --> C\n    H --> I(Is there a trough in the first 18 days?)\n    I --> |Yes| K(Is there a peak before the trough?)\n    K --> |Yes| L(Alert has LC shape: m1+m2+m3)\n    K --> |No| M(Alert has LC shape: m2+m3)\n\n     --> |No| Z(...)","mermaid":"{\n  \"theme\": \"default\"\n}","autoSync":true,"updateDiagram":false},"time":1714428507469,"type":"auto","id":"ab9eca55-0628-4bc1-98ae-d8926af58636","name":"cool-kangaroo"},{"state":{"code":"flowchart TD\n    A[Extragalactic?] -->|Yes| B(Moving Solar System Object?)\n    A --> C(Skip)\n    B --> C\n    B --> |No| D(At least 30 mins b/w 1st and last detection?)\n    D --> |Yes| E(Coincident with known stellar object?)\n    D --> C\n    E --> |No| F(...)\n    E --> C\n    F(Split alert data into g and r band)\n    F --> G(At least 2 detections in each band?)\n    G --> |Yes| H(1. Define features ranges based on best-fit MCMC parameters\n                2. Assign each observation a gradient with np.gradient\n                3. Assign each observation one of the following regimes: start, rise, peak, fall, trough, or end)\n    G --> C\n    H --> I(Is there a trough in the first 18 days?)\n    I --> |Yes| K(Is there a peak before the trough?)\n    K --> |Yes| L(Alert has LC shape: m1+m2+m3\n                1. Segment alert into rise, fall, rise2\n                2. Fit each segment to 1D line with scipy.linregress)\n    I --> |No| M(Alert has LC shape: )\n    G --> |No| Z","mermaid":"{\n  \"theme\": \"default\"\n}","autoSync":true,"updateDiagram":false},"time":1714428447468,"type":"auto","id":"09576bf6-3d21-4b4f-9398-5938bd0ac4c4","name":"late-monkey"},{"state":{"code":"flowchart TD\n    A[Extragalactic?] -->|Yes| B(Moving Solar System Object?)\n    A --> C(Skip)\n    B --> C\n    B --> |No| D(At least 30 mins b/w 1st and last detection?)\n    D --> |Yes| E(Coincident with known stellar object?)\n    D --> C\n    E --> |No| F(...)\n    E --> C\n    F(Split alert data into g and r band)\n    F --> G(At least 2 detections in each band?)\n    G --> |Yes| H(Define features ranges based on best-fit MCMC parameters\n                Assign each observation a gradient with np.gradient\n                Assign each observation one of the following regimes: start, rise, peak, fall, trough, or end)\n    G --> C\n    H --> I(Is there a trough in the first 18 days?)\n    I --> |Yes| K(Is there a peak before the trough?)\n    K --> |Yes| L(Alert has LC shape: m1+m2+m3\n                Segment alert into rise, fall, rise2\n                Fit each segment to 1D line with scipy.linregress)\n\n    L --> |No| Z","mermaid":"{\n  \"theme\": \"default\"\n}","autoSync":true,"updateDiagram":false},"time":1714428387467,"type":"auto","id":"10c045f7-9896-4d79-a6d0-90fc5c5e249a","name":"defeated-exabyte"},{"state":{"code":"flowchart TD\n    A[Extragalactic?] -->|Yes| B(Moving Solar System Object?)\n    A --> C(Skip)\n    B --> C\n    B --> |No| D(At least 30 mins b/w 1st and last detection?)\n    D --> |Yes| E(Coincident with known stellar object?)\n    D --> C\n    E --> |No| F(...)\n    E --> C\n    F(Split alert data into g and r band)\n    F --> G(At least 2 detections in each band?)\n    G --> |Yes| H(Define features ranges based on best-fit MCMC parameters)\n    G --> C\n    H --> I(Assign each observation a gradient with np.gradient)\n    I --> J(Assign each observation one of the following regimes: start, rise, peak, fall, trough, or end)\n    J --> K(Is there a trough in the first 18 days?)\n    K --> |Yes| L(Is there a peak before the trough?)\n    L --> |Yes| M(Alert has LC shape: m1+m2+m3\n                Segment alert into rise, fall, rise2\n                Fit each segment to 1D line with scipy.linregress)\n\n    K --> |No| Z","mermaid":"{\n  \"theme\": \"default\"\n}","autoSync":true,"updateDiagram":false},"time":1714428327465,"type":"auto","id":"93b21549-6a92-499d-8754-9fbd8d12253c","name":"nutty-engine"},{"state":{"code":"flowchart TD\n    A[Extragalactic?] -->|Yes| B(Moving Solar System Object?)\n    A --> C(Skip)\n    B --> C\n    B --> |No| D(At least 30 mins b/w 1st and last detection?)\n    D --> |Yes| E(Coincident with known stellar object?)\n    D --> C\n    E --> |No| F(...)\n    E --> C\n    F(Split alert data into g and r band)\n    F --> G(At least 2 detections in each band?)\n    G --> |Yes| H(Define features ranges based on best-fit MCMC parameters)\n    G --> C\n    H --> I(Assign each observation a gradient with np.gradient)\n    I --> J(Assign each observation one of the following regimes: start, rise, peak, fall, trough, or end)\n    J --> K(Is there a trough in the first 18 days?)\n    K --> |Yes| L(Is there a peak before the trough?)\n    L --> |Yes| M(Alert has LC shape: m1+m2+m3\n                )\n\n    K --> |No| Z","mermaid":"{\n  \"theme\": \"default\"\n}","autoSync":true,"updateDiagram":false},"time":1714428267465,"type":"auto","id":"fea5d323-6230-4c0a-9300-ab900c7e3921","name":"thousands-yacht"},{"state":{"code":"flowchart TD\n    A[Extragalactic?] -->|Yes| B(Moving Solar System Object?)\n    A --> C(Skip)\n    B --> C\n    B --> |No| D(At least 30 mins b/w 1st and last detection?)\n    D --> |Yes| E(Coincident with known stellar object?)\n    D --> C\n    E --> |No| F(...)\n    E --> C\n    F(Split alert data into g and r band)\n    F --> G(At least 2 detections in each band?)\n    G --> |Yes| H(Define features ranges based on best-fit MCMC parameters)\n    G --> C\n    H --> I(Assign each observation a gradient with np.gradient)\n    I --> J(Assign each observation one of the following regimes: start, rise, peak, fall, trough, or end)\n    J --> K(Is there a trough in the first 18 days?)\n    K --> |Yes| L(Is there a peak before the trough?)\n    L --> |Yes| M(...)\n    \n    K --> |No| Z","mermaid":"{\n  \"theme\": \"default\"\n}","autoSync":true,"updateDiagram":false},"time":1714428207464,"type":"auto","id":"a6981180-6f1a-4c91-9a7f-8af9c844ed74","name":"bored-advantage"},{"state":{"code":"flowchart TD\n    A[Extragalactic?] -->|Yes| B(Moving Solar System Object?)\n    A --> C(Skip)\n    B --> C\n    B --> |No| D(At least 30 mins b/w 1st and last detection?)\n    D --> |Yes| E(Coincident with known stellar object?)\n    D --> C\n    E --> |No| F(...)\n    E --> C\n    F(Split alert data into g and r band)\n    F --> G(At least 2 detections in each band?)\n    G --> |Yes| H(Define features ranges based on best-fit MCMC parameters)\n    G --> C\n    H --> I(Assign each observation a gradient with np.gradient)\n    I --> J(Assign each observation one of the following regimes: start, rise, peak, fall, trough, or end)\n    J --> K(Is there a trough in the first 18 days?)\n    K --> |Yes| L(...)\n    K --> |No| Z","mermaid":"{\n  \"theme\": \"default\"\n}","autoSync":true,"updateDiagram":false},"time":1714428147462,"type":"auto","id":"24a121b9-2633-4ea5-b61c-47e7b1aec0a1","name":"greasy-bit"},{"state":{"code":"flowchart TD\n    A[Extragalactic?] -->|Yes| B(Moving Solar System Object?)\n    A --> C(Skip)\n    B --> C\n    B --> |No| D(At least 30 mins b/w 1st and last detection?)\n    D --> |Yes| E(Coincident with known stellar object?)\n    D --> C\n    E --> |No| F(...)\n    E --> C\n    F(Split alert data into g and r band)\n    F --> G(At least 2 detections in each band?)\n    G --> |Yes| H(Define features ranges based on best-fit MCMC parameters)\n    G --> C\n    H --> I(Assign each observation a gradient with np.gradient)\n    I --> J(Assign each observation one of the following regimes: start, rise, peak, fall, trough, or end)\n    J --> K(IS )","mermaid":"{\n  \"theme\": \"default\"\n}","autoSync":true,"updateDiagram":false},"time":1714428087461,"type":"auto","id":"b91b075e-7caf-43c2-a8f6-52c3a4f18edc","name":"sharp-psychiatrist"},{"state":{"code":"flowchart TD\n    A[Extragalactic?] -->|Yes| B(Moving Solar System Object?)\n    A --> C(Skip)\n    B --> C\n    B --> |No| D(At least 30 mins b/w 1st and last detection?)\n    D --> |Yes| E(Coincident with known stellar object?)\n    D --> C\n    E --> |No| F(...)\n    E --> C\n    F(Split alert data into g and r band)\n    F--> G(At least 2 detections in each band?)\n    G--> |Yes| H(Define features ranges based on best-fit MCMC parameters)\n    G-->C\n    H--> I(Assign each observation a gradient with np.gradient)\n    I-->J(Assign each observation one of the following regimes: start, rise, peak, fall, trough, or end)\n    J-->(...)","mermaid":"{\n  \"theme\": \"default\"\n}","autoSync":true,"updateDiagram":false},"time":1714428027447,"type":"auto","id":"db3390f2-e0fb-462e-8613-2cd7201922ab","name":"aggressive-kite"},{"state":{"code":"flowchart TD\n    A[Extragalactic?] -->|Yes| B(Moving Solar System Object?)\n    A --> C(Skip)\n    B --> C\n    B --> |No| D(At least 30 mins b/w 1st and last detection?)\n    D --> |Yes| E(Coincident with known stellar object?)\n    D --> C\n    E --> |No| F(...)\n    E --> C\n    F(Split alert data into g and r band)\n    F--> G(At least 2 detections in each band?)\n    G--> |Yes| H(Define features ranges based on best-fit MCMC parameters)\n    G-->C\n    H--> I(Assign each observation a gradient with np.gradient)\n    I-->","mermaid":"{\n  \"theme\": \"default\"\n}","autoSync":true,"updateDiagram":false},"time":1714427967446,"type":"auto","id":"8f7e472c-1e4d-4846-92bc-3d533a4fe86c","name":"flaky-pharmacist"},{"state":{"code":"flowchart TD\n    A[Extragalactic?] -->|Yes| B(Moving Solar System Object?)\n    A --> C(Skip)\n    B --> C\n    B --> |No| D(At least 30 mins b/w 1st and last detection?)\n    D --> |Yes| E(Coincident with known stellar object?)\n    D --> C\n    E --> |No| F(...)\n    E --> C\n    F(Split alert data into g and r band)\n    F--> G(At least 2 detections in each band?)\n    G--> |Yes| H(Define features ranges based on MCMC parameters)\n    G-->C","mermaid":"{\n  \"theme\": \"default\"\n}","autoSync":true,"updateDiagram":false},"time":1714427907445,"type":"auto","id":"d6eae83d-a478-4dee-b2cc-fcdaa1750fc8","name":"shrilling-wolf"},{"state":{"code":"flowchart TD\n    A[Extragalactic?] -->|Yes| B(Moving Solar System Object?)\n    A --> C(Skip)\n    B --> C\n    B --> |No| D(At least 30 mins b/w 1st and last detection?)\n    D --> |Yes| E(Coincident with known stellar object?)\n    D --> C\n    E --> |No| F(...)\n    E --> C\n    F(Split alert data into g and r band)\n    F--> G(...)","mermaid":"{\n  \"theme\": \"default\"\n}","autoSync":true,"updateDiagram":false},"time":1714427847444,"type":"auto","id":"6ce1f444-e72d-42b3-87bf-b74d4d1ad561","name":"bad-lock"},{"state":{"code":"flowchart TD\n    A[Extragalactic?] -->|Yes| B(Moving Solar System Object?)\n    A --> C(Skip)\n    B --> C\n    B --> |No| D(At least 30 mins b/w 1st and last detection?)\n    D --> |Yes| E(Coincident with known stellar object?)\n    D --> C\n    E --> |No| F(...)\n    E --> C\n","mermaid":"{\n  \"theme\": \"default\"\n}","autoSync":true,"updateDiagram":false},"time":1714427787443,"type":"auto","id":"6677232b-6e43-4770-9d94-e4513df2ebc8","name":"refined-doctor"},{"state":{"code":"flowchart TD\n    A[Extragalactic?] -->|Yes| B(Moving Solar System Object?)\n    A --> |No| C(Skip)\n    B --> |Yes| C\n    B --> |No| D(at least 30 mins b/w 1st and last detection?)\n    D --> |Yes| E(Coincident with known stellar object?)\n    D --> |No| C","mermaid":"{\n  \"theme\": \"default\"\n}","autoSync":true,"updateDiagram":false},"time":1714427727441,"type":"auto","id":"f4bd0c1f-360b-444a-ad98-8f59adf95750","name":"beefy-whale"},{"state":{"code":"flowchart TD\n    A[Extragalactic?] -->|Yes| B(Moving Solar System Object?)\n    A --> |No| C(Skip)\n    B --> |Yes| C\n    B --> |No| D(at least 30 mins b/w 1st and last detection?)\n    D","mermaid":"{\n  \"theme\": \"default\"\n}","autoSync":true,"updateDiagram":false},"time":1714427667440,"type":"auto","id":"764e2aee-f40a-4978-881a-45bbde355f4e","name":"fit-butcher"},{"state":{"code":"flowchart TD\n    A[Extragalactic?] -->|Yes| B(Moving Solar System Object?)\n    A --> |No| C(Skip)\n    B --> |Yes| C\n    B --> |No| D(...)","mermaid":"{\n  \"theme\": \"default\"\n}","autoSync":true,"updateDiagram":false},"time":1714427607439,"type":"auto","id":"a0dcf52c-1dd7-4b52-a3ac-2e29f93e039a","name":"purring-keyboard"},{"state":{"code":"flowchart TD\n    A[Extragalactic?] -->|Yes| B(Moving Solar System Object?)\n    A --> |No| C(Skip)\n    B --> |No| D(...)\n    D -->|One| E[Laptop]\n    D -->|Two| F[iPhone]\n    D -->|Three| G[fa:fa-car Car]","mermaid":"{\n  \"theme\": \"default\"\n}","autoSync":true,"updateDiagram":false},"time":1714427547438,"type":"auto","id":"8d55694a-bd8e-4e68-9d2b-8b84cf9a6972","name":"ambitious-needle"},{"state":{"code":"flowchart TD\n    A[Extragalactic?] -->|Yes| B(...)\n    A --> C(Skip)\n    B --> D{Let me think}\n    D -->|One| E[Laptop]\n    D -->|Two| F[iPhone]\n    D -->|Three| G[fa:fa-car Car]","mermaid":"{\n  \"theme\": \"default\"\n}","autoSync":true,"updateDiagram":false},"time":1714427366124,"type":"auto","id":"c5488ab6-9294-4140-83c2-af16dc1d69de","name":"panicky-painter"},{"state":{"code":"flowchart TD\n    A[Extragalactic?] -->|Yes| B(...)\n    A --> B(Skip)\n    B --> D{Let me think}\n    D -->|One| D[Laptop]\n    D -->|Two| E[iPhone]\n    D -->|Three| F[fa:fa-car Car]","mermaid":"{\n  \"theme\": \"default\"\n}","autoSync":true,"updateDiagram":false},"time":1714427306123,"type":"auto","id":"d38702eb-e670-47f4-8fcf-f7c9d2c9341d","name":"straight-cpu"},{"state":{"code":"flowchart TD\n    A[Extragalactic?] -->|Yes| B(...)\n    A --> \n    B --> C{Let me think}\n    C -->|One| D[Laptop]\n    C -->|Two| E[iPhone]\n    C -->|Three| F[fa:fa-car Car]","mermaid":"{\n  \"theme\": \"default\"\n}","autoSync":true,"updateDiagram":false},"time":1714427246121,"type":"auto","id":"81be645f-2c1a-4170-98c1-e1c6f794d886","name":"unsightly-adult"},{"state":{"code":"flowchart TD\n    A[Extragalactic?] -->|Yes| B(...)\n    B --> C{Let me think}\n    C -->|One| D[Laptop]\n    C -->|Two| E[iPhone]\n    C -->|Three| F[fa:fa-car Car]","mermaid":"{\n  \"theme\": \"default\"\n}","autoSync":true,"updateDiagram":false},"time":1714427186119,"type":"auto","id":"fbdc507a-7845-4e47-8b2a-59095bb6b2d5","name":"short-motorcycle"},{"state":{"code":"flowchart TD\n    A[Christmas] -->|Get money| B(Go shopping)\n    B --> C{Let me think}\n    C -->|One| D[Laptop]\n    C -->|Two| E[iPhone]\n    C -->|Three| F[fa:fa-car Car]","mermaid":"{\n  \"theme\": \"default\"\n}","autoSync":true,"updateDiagram":true},"time":1714427126118,"type":"auto","id":"e15e64d4-8364-4032-82ef-b9634911b895","name":"mango-hospital"}]